name: Docker Images CI

on:
  push:
    branches: [ master ]
    paths:
      - 'docker/Dockerfile*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:

  cuda11-0:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the cuda 11.0 runtime Docker image
      run: >
           docker build --file docker/Dockerfile 
           --build-arg TF_PACKAGE=https://github.com/davidenunes/tensorflow-wheels/releases/download/r2.3.cp38.gpu/tensorflow-2.3.0-cp38-cp38-linux_x86_64.whl
           --tag rexhaif/ml-toolbox:latest --tag rexhaif/ml-toolbox:cu110 
           --tag rexhaif/ml-toolbox:cu110-runtime .
    - name: Build the cuda 11.0 devel Docker image
      run: >
           docker build --file docker/Dockerfile 
           --build-arg TF_PACKAGE=https://github.com/davidenunes/tensorflow-wheels/releases/download/r2.3.cp38.gpu/tensorflow-2.3.0-cp38-cp38-linux_x86_64.whl
           --build-arg BASE_IMAGE=nvidia/cuda:11.0-devel-ubuntu20.04 
           --tag rexhaif/ml-toolbox:cu110-devel .
    - name: Push cuda 11.0 images to dockerhub
      run: >
           echo ${password} | docker login -u ${username} --password-stdin &&
           docker push rexhaif/ml-toolbox:latest &&
           docker push rexhaif/ml-toolbox:cu110 &&
           docker push rexhaif/ml-toolbox:cu110-runtime &&
           docker push rexhaif/ml-toolbox:cu110-devel
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  cuda10-0:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the cuda 10.0 runtime Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cu100-runtime --tag rexhaif/ml-toolbox:cu100 
           --build-arg BASE_IMAGE=nvidia/cuda:10.0-runtime-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda100/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0+cu92 -f https://download.pytorch.org/whl/torch_stable.html"
           --build-arg TF_PACKAGE=tensorflow .
    - name: Build the cuda 10.0 devel Docker image
      run: >
           docker build --file docker/Dockerfile
           --tag rexhaif/ml-toolbox:cu100-devel 
           --build-arg BASE_IMAGE=nvidia/cuda:10.0-devel-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda100/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0+cu92 -f https://download.pytorch.org/whl/torch_stable.html"
           --build-arg TF_PACKAGE=tensorflow .
    - name: Push cuda 10.0 images to dockerhub
      run: >
           echo ${password} | docker login -u ${username} --password-stdin &&
           docker push rexhaif/ml-toolbox:cu100 &&
           docker push rexhaif/ml-toolbox:cu100-runtime &&
           docker push rexhaif/ml-toolbox:cu100-devel
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  cuda10-1:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the cuda 10.1 runtime Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cu101 --tag rexhaif/ml-toolbox:cu101-runtime 
           --build-arg BASE_IMAGE=nvidia/cuda:10.1-runtime-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda101/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html"
           --build-arg TF_PACKAGE=tensorflow .
    - name: Build the cuda 10.1 devel Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cu101-devel 
           --build-arg BASE_IMAGE=nvidia/cuda:10.1-devel-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda101/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html"
           --build-arg TF_PACKAGE=tensorflow .
    - name: Push cuda 10.1 images to dockerhub
      run: >
           echo ${password} | docker login -u ${username} --password-stdin &&
           docker push rexhaif/ml-toolbox:cu101 &&
           docker push rexhaif/ml-toolbox:cu101-runtime &&
           docker push rexhaif/ml-toolbox:cu101-devel
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
  cuda10-2:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the cuda 10.2 runtime Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cu102 --tag rexhaif/ml-toolbox:cu102-runtime
           --build-arg BASE_IMAGE=nvidia/cuda:10.2-runtime-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda102/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0"
           --build-arg TF_PACKAGE=https://github.com/davidenunes/tensorflow-wheels/releases/download/r2.2.cp38.gpu/tensorflow-2.2.0-cp38-cp38-linux_x86_64.whl .
    - name: Build the cuda 10.2 devel Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cu102-devel
           --build-arg BASE_IMAGE=nvidia/cuda:10.2-devel-ubuntu18.04 
           --build-arg JAX_PACKAGE=https://storage.googleapis.com/jax-releases/cuda102/jaxlib-0.1.52-cp38-none-manylinux2010_x86_64.whl
           --build-arg PYTORCH_PACKAGE="torch==1.6.0"
           --build-arg TF_PACKAGE=https://github.com/davidenunes/tensorflow-wheels/releases/download/r2.2.cp38.gpu/tensorflow-2.2.0-cp38-cp38-linux_x86_64.whl .
    - name: Push cuda 10.2 images to dockerhub
      run: >
           echo ${password} | docker login -u ${username} --password-stdin &&
           docker push rexhaif/ml-toolbox:cu102 &&
           docker push rexhaif/ml-toolbox:cu102-runtime &&
           docker push rexhaif/ml-toolbox:cu102-devel
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  cpu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the cpu-only Docker image
      run: >
           docker build --file docker/Dockerfile 
           --tag rexhaif/ml-toolbox:cpu
           --build-arg BASE_IMAGE=ubuntu:20.04 
           --build-arg JAX_PACKAGE=jaxlib
           --build-arg PYTORCH_PACKAGE="torch==1.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html"
           --build-arg TF_PACKAGE="https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow_cpu-2.3.0-cp38-cp38-manylinux2010_x86_64.whl" .
    - name: Push cpu-only image to dockerhub
      run: echo ${password} | docker login -u ${username} --password-stdin && docker push rexhaif/ml-toolbox:cpu
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
