name: Docker Images CI/CD

on:
  push:
    branches: [master]
    paths:
      - "docker/Dockerfile*"
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  cuda11-0:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the cuda 11.0 runtime Docker image
        run: >
          docker build
          --file docker/Dockerfile 
          --build-arg TF_FILE=install_tf2.4.0.sh
          --build-arg BASE_IMAGE=nvidia/cuda:11.1.1-cudnn8-runtime-ubuntu20.04
          --build-arg PYTORCH_PACKAGE="torch==1.11.0+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html"
          --tag rexhaif/ml-toolbox:latest
          --tag rexhaif/ml-toolbox:cu110
          --tag rexhaif/ml-toolbox:cu110-runtime
          --tag rexhaif/ml-toolbox:cu110-runtime-${GITHUB_SHA}
          .

      - name: Build the cuda 11.0 devel Docker image
        run: >
          docker build
          --file docker/Dockerfile 
          --build-arg TF_FILE=install_tf2.4.0.sh
          --build-arg BASE_IMAGE=nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04 
          --build-arg PYTORCH_PACKAGE="torch==1.11.0+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html"
          --tag rexhaif/ml-toolbox:cu110-devel
          --tag rexhaif/ml-toolbox:cu110-devel-${GITHUB_SHA}
          .

      - name: Push cuda 11.0 images to dockerhub
        run: >
          echo ${password} | docker login -u ${username} --password-stdin &&
          docker push rexhaif/ml-toolbox:latest &&
          docker push rexhaif/ml-toolbox:cu110 &&
          docker push rexhaif/ml-toolbox:cu110-runtime &&
          docker push rexhaif/ml-toolbox:cu110-runtime-${GITHUB_SHA} &&
          docker push rexhaif/ml-toolbox:cu110-devel &&
          docker push rexhaif/ml-toolbox:cu110-devel-${GITHUB_SHA}
        env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  cuda10-1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the cuda 10.1 runtime Docker image
      run: >
           docker build
           --file docker/Dockerfile
           --build-arg BASE_IMAGE=nvidia/cuda:10.1-runtime-ubuntu18.04
           --build-arg PYTORCH_PACKAGE="torch"
           --build-arg TF_FILE=install_tf2.3.0.sh
           --tag rexhaif/ml-toolbox:cu101
           --tag rexhaif/ml-toolbox:cu101-runtime
           --tag rexhaif/ml-toolbox:cu101-runtime-${GITHUB_SHA}
           .
    - name: Build the cuda 10.1 devel Docker image
      run: >
           docker build
           --file docker/Dockerfile
           --build-arg BASE_IMAGE=nvidia/cuda:10.1-devel-ubuntu18.04
           --build-arg PYTORCH_PACKAGE="torch"
           --build-arg TF_FILE=install_tf2.3.0.sh
           --tag rexhaif/ml-toolbox:cu101-devel
           --tag rexhaif/ml-toolbox:cu101-devel-${GITHUB_SHA}
           .
    - name: Push cuda 10.1 images to dockerhub
      run: >
           echo ${password} | docker login -u ${username} --password-stdin &&
           docker push rexhaif/ml-toolbox:cu101 &&
           docker push rexhaif/ml-toolbox:cu101-runtime &&
           docker push rexhaif/ml-toolbox:cu101-runtime-${GITHUB_SHA} &&
           docker push rexhaif/ml-toolbox:cu101-devel &&
           docker push rexhaif/ml-toolbox:cu101-devel-${GITHUB_SHA}
      env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
  cpu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build the cpu-only Docker image
        run: >
          docker build
          --file docker/Dockerfile 
          --build-arg BASE_IMAGE=ubuntu:20.04
          --build-arg CUDNN_INSTALL="echo 'No Cudnn install'"
          --build-arg PYTORCH_PACKAGE="torch==1.11.0+cpu -f https://download.pytorch.org/whl/cpu/torch_stable.html"
          --build-arg TF_FILE=install_tf2.4.0-cpu.sh
          --tag rexhaif/ml-toolbox:cpu
          --tag rexhaif/ml-toolbox:cpu-${GITHUB_SHA}
          .

      - name: Push cpu-only image to dockerhub
        run: >
          echo ${password} | docker login -u ${username} --password-stdin &&
          docker push rexhaif/ml-toolbox:cpu
        env:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
